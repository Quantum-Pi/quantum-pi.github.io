import{f as x,a as h,c as ke}from"../chunks/D2JPK1KS.js";import{L as Se,M as J,N as ne,z as Te,O as u,P as I,Q as Ce,R as m,G as e,S as O,T as d,V as ie}from"../chunks/BaNVDPTi.js";import{d as Pe,s as M}from"../chunks/DFP8Ri1m.js";import{e as L,s as K,i as A}from"../chunks/DNZpER3p.js";import{i as te}from"../chunks/C37WilUv.js";import{s as Ie,r as ce,a as fe,b as ve,c as Le}from"../chunks/CVlAR5jc.js";const Ae=(Z,_,y,T,k,w)=>{O(_,0);const C=K(e(y)).map(R=>[...R]);O(T,k(C,w),!0),console.log("Unique Solutions:",K(e(T))),console.log("Iterations:",e(_))};var Oe=(Z,_,y)=>{e(_)[y()]=!e(_)[y()],O(_,{...e(_)},!0)},Re=x('<div class="flex items-center space-x-2"><label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label> <div class="w-8 h-8 border border-gray-300"></div> <span> </span></div>'),je=(Z,_,y,T)=>_(y,T),Ne=x('<label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label>'),qe=x('<div class="flex items-center space-x-2"></div>'),ze=x(`<p class="text-red-500">Iteration limit reached. Please try to reduce the number of pieces or the size of the
						board.</p>`),Ge=x('<p class="text-green-500"> </p>'),Je=x('<div class="w-8 h-8 border border-gray-300"></div>'),Me=x('<div class="mb-8 w-screen"><h3 class="text-xl font-semibold mb-4"></h3> <div class="mb-2"><strong>Stats</strong> </div> <div class="grid grid-cols-7 gap-1 w-fit svelte-1k48ly"></div></div>'),Ze=x('<div class="m-8 flex flex-col justify-center w-min"><h2 class="text-2xl font-bold mb-4">Solutions</h2> <!></div>'),$e=x("<p>No solutions found.</p>"),De=x('<div class="mx-8 mt-4"><!></div> <!>',1),He=x(`<div class="p-8"><div>Soul weapon engravement optimimzer for <a class="text-blue-500" href="https://www.reddit.com/r/SlayerLegend/">Slayer Legends</a></div> <div class="my-4"><div>If you have any comments/requests you can reach out to me via:</div> <div class="ml-3">Discord: quantumpie</div> <div class="ml-3">Reddit: u/QuantumPie_</div></div> <span class="h4">How to use:</span> <div class="flex flex-col gap-y-2 mb-4"><span class="ml-4">1. Select which pieces you want to be included in the solved pattern (for example, if CRIT &
			ATK are selected, the solutions must include at least one of those pieces)</span> <span class="ml-4">2. Check the boxes to match the pattern for your soul weapon. The current example is for a
			4x4 weapon (note: it doesn't matter where the 4x4 region is centered)</span> <span class="ml-4">3. Click the "Start" button to find all possible solutions with the given constraints</span> <span>Note: There are <span> </span> </span></div> <div></div> <div class="mt-8 flex flex-col justify-center w-min"><div class="space-y-2 mb-4"></div> <button type="button" class="btn preset-filled-primary-500">Start</button></div> <div class="w-screen"><!></div></div>`);function We(Z,_){Se(_,!0);const y=1e7,T=90;let k=J(0),w=J(ne([[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!1,!0,!1,!1,!1],[!0,!0,!0,!0,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1]]));Te(()=>{e(w),e(N),O(R,oe(!0).length,!0)});let C=J(null),R=J(0);const de=(a,l)=>{e(w)[a][l]=!e(w)[a][l],O(w,[...e(w)],!0)},pe=a=>{const l=Array.from({length:7},()=>Array(7).fill(null));for(const{piece:t,rotation:n,position:r}of a){const s=j[t][n],[i,c]=r;for(let p=0;p<s.length;p++)for(let o=0;o<s[p].length;o++)s[p][o]===1&&(l[i+p][c+o]=t)}return l},se={I:"#FF0000",O:"#00FF00",T:"#0000FF",L:"#FF00FF",J:"#00FFFF",S:"#FFFF00",Z:"#FFFFFF"},ae={I:"Gold",O:"Crit DMG",T:"HP Recovery",L:"ATK",J:"HP",S:"Accuracy",Z:"Dodge"},j={I:[[[1,1,1,1]],[[1],[1],[1],[1]]],O:[[[1,1],[1,1]]],T:[[[0,1,0],[1,1,1]],[[1,0],[1,1],[1,0]],[[1,1,1],[0,1,0]],[[0,1],[1,1],[0,1]]],L:[[[1,0],[1,0],[1,1]],[[1,1,1],[1,0,0]],[[1,1],[0,1],[0,1]],[[0,0,1],[1,1,1]]],J:[[[0,1],[0,1],[1,1]],[[1,0,0],[1,1,1]],[[1,1],[1,0],[1,0]],[[1,1,1],[0,0,1]]],S:[[[0,1,1],[1,1,0]],[[1,0],[1,1],[0,1]]],Z:[[[1,1,0],[0,1,1]],[[0,1],[1,1],[1,0]]]};let N=J(ne({I:!0,O:!0,T:!0,L:!0,J:!0,S:!0,Z:!0}));const ue=(a,l)=>{const t=[];for(let n=0;n<l.length;n++){const r=l[n];for(let s=0;s<=a.length-r.length;s++)for(let i=0;i<=a[0].length-r[0].length;i++)me(a,r,s,i)&&t.push({rotation:n,position:[s,i]})}return t},me=(a,l,t,n)=>{for(let r=0;r<l.length;r++)for(let s=0;s<l[r].length;s++)if(l[r][s]===1){const i=t+r,c=n+s;if(i>=a.length||c>=a[0].length||!a[i][c])return!1}return!0},he=(a,l)=>{const t=a.map(n=>n.map(()=>!1));for(const{rotation:n,position:r,piece:s}of l){const i=j[s][n],[c,p]=r;for(let o=0;o<i.length;o++)for(let f=0;f<i[o].length;f++)if(i[o][f]===1){if(t[c+o][p+f]||!a[c+o][p+f])return!1;t[c+o][p+f]=!0}}return a.every((n,r)=>n.every((s,i)=>!s||t[r][i]))},oe=(a=!1)=>{const l=[];for(const[t,n]of Object.entries(j)){const r=ue(e(w),n).map(s=>({piece:t,...s}));l.push(...r)}return a?l.filter(({piece:t})=>e(N)[t]):l},_e=(a,l)=>{const t=oe(!1);console.log("Number of placements: ",t.length);const n=new Set,r=[],s=(c,p,o=!1)=>{if(he(a,c)){const g=c.map(({piece:S})=>S).sort().join(",");n.has(g)||(n.add(g),r.push([...c]));return}const f=o?t:t.filter(({piece:g})=>e(N)[g]);for(const g of f){if(e(k)>y){console.log("Iteration limit reached");return}const{piece:S,rotation:D,position:Y}=g,F=l[S][D],[q,P]=Y;let z=!0;for(let v=0;v<F.length;v++){for(let b=0;b<F[v].length;b++){if(F[v][b]===1){const H=q+v,U=P+b;if(p[H][U]){z=!1;break}}O(k,e(k)+1)}if(!z)break}if(!z)continue;const G=p.map(v=>[...v]);for(let v=0;v<F.length;v++)for(let b=0;b<F[v].length;b++)F[v][b]===1&&(G[q+v][P+b]=!0);c.push(g),s(c,G,!0),c.pop()}},i=a.map(c=>c.map(()=>!1));return s([],i),r};var Q=He(),V=u(m(Q),6),re=u(m(V),6),$=u(m(re)),ge=m($,!0);d($);var be=u($);d(re),d(V);var X=u(V,2);L(X,21,()=>Object.entries(j),A,(a,l)=>{let t=()=>e(l)[0];var n=Re(),r=m(n),s=m(r);ce(s),s.__change=[Oe,N,t],d(r);var i=u(r,2),c=u(i,2),p=m(c,!0);d(c),d(n),I(o=>{fe(s,o),ve(i,`background-color: ${se[t()]??""}`),M(p,ae[t()])},[()=>K(e(N))[t()]]),h(a,n)}),d(X);var E=u(X,2),W=m(E);L(W,20,()=>[0,1,2,3,4,5,6],A,(a,l)=>{var t=qe();L(t,20,()=>[0,1,2,3,4,5,6],A,(n,r)=>{var s=Ne(),i=m(s);ce(i),i.__change=[je,de,l,r],d(s),I(c=>fe(i,c),[()=>K(e(w))[l][r]]),h(n,s)}),d(t),h(a,t)}),d(W);var xe=u(W,2);xe.__click=[Ae,k,w,C,_e,j],d(E);var le=u(E,2),ye=m(le);{var we=a=>{var l=De(),t=ie(l),n=m(t);{var r=o=>{var f=ze();h(o,f)},s=o=>{var f=Ge(),g=m(f);d(f),I(S=>M(g,`Checked ${S??""} possible combinations.`),[()=>e(k).toLocaleString()]),h(o,f)};te(n,o=>{e(k)>=y-1?o(r):o(s,!1)})}d(t);var i=u(t,2);{var c=o=>{var f=Ze(),g=u(m(f),2);L(g,17,()=>e(C),A,(S,D,Y)=>{var F=Me(),q=m(F);q.textContent=`Solution ${Y+1}:`;var P=u(q,2),z=u(m(P));d(P);var G=u(P,2);L(G,21,()=>pe(e(D)),A,(v,b)=>{var H=ke(),U=ie(H);L(U,17,()=>e(b),A,(Fe,B)=>{var ee=Je();I(()=>{ve(ee,`background-color: ${(e(B)?se[e(B)]:"transparent")??""}`),Le(ee,"title",e(B)?`Piece: ${e(B)}`:"")}),h(Fe,ee)}),h(v,H)}),d(G),d(F),I(v=>M(z,`: ${v??""}`),[()=>e(D).map(({piece:v})=>ae[v]).join(", ")]),h(S,F)}),d(f),h(o,f)},p=o=>{var f=$e();h(o,f)};te(i,o=>{e(C).length>0?o(c):o(p,!1)})}h(a,l)};te(ye,a=>{e(C)&&a(we)})}d(le),d(Q),I(a=>{Ie($,1,`${e(R)>=T?"text-red-500":"text-green-500"}`,"svelte-1k48ly"),M(ge,e(R)),M(be,` initial solutions to check. If this number is over 90, there will likely be to many
			solutions to check and it will stop after checking ${a??""} scenarios`)},[()=>y.toLocaleString()]),h(Z,Q),Ce()}Pe(["change","click"]);export{We as component};
