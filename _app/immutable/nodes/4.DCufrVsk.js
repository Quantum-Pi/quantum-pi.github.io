import{f as x,a as h,c as ke}from"../chunks/Dyu1XyBt.js";import{L as Se,M as G,N as ne,z as Te,O as u,P as I,Q as Ce,R as m,G as e,S as O,T as d,V as Pe,W as ie,X as Ie}from"../chunks/Ca3jHV7y.js";import{d as Le,s as J}from"../chunks/BMdHCZXM.js";import{e as L,s as B,i as A}from"../chunks/IjkGsbBW.js";import{i as te}from"../chunks/DL8uM_mf.js";import{s as Ae,r as ce,a as fe,b as ve,c as Oe}from"../chunks/DgRVQ0Uq.js";const Re=(M,_,y,T,k,w)=>{O(_,0);const C=B(e(y)).map(R=>[...R]);O(T,k(C,w),!0),console.log("Unique Solutions:",B(e(T))),console.log("Iterations:",e(_))};var je=(M,_,y)=>{e(_)[y()]=!e(_)[y()],O(_,{...e(_)},!0)},Ne=x('<div class="flex items-center space-x-2"><label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label> <div class="w-8 h-8 border border-gray-300"></div> <span> </span></div>'),$e=(M,_,y,T)=>_(y,T),qe=x('<label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label>'),ze=x('<div class="flex items-center space-x-2"></div>'),Ge=x(`<p class="text-red-500">Iteration limit reached. Please try to reduce the number of pieces or the size of the
						board.</p>`),Je=x('<p class="text-green-500"> </p>'),Me=x('<div class="w-8 h-8 border border-gray-300"></div>'),Ze=x('<div class="mb-8 w-screen"><h3 class="text-xl font-semibold mb-4"></h3> <div class="mb-2"><strong>Stats</strong> </div> <div class="grid grid-cols-7 gap-1 w-fit svelte-1k48ly"></div></div>'),De=x('<div class="m-8 flex flex-col justify-center w-min"><h2 class="text-2xl font-bold mb-4">Solutions</h2> <!></div>'),He=x("<p>No solutions found.</p>"),Xe=x('<div class="mx-8 mt-4"><!></div> <!>',1),Be=x(`<div class="p-8"><div>Soul weapon engravement optimimzer for <a class="text-blue-500" href="https://www.reddit.com/r/SlayerLegend/">Slayer Legends</a></div> <div class="my-4"><div>If you have any comments/requests you can reach out to me via:</div> <div class="ml-3">Discord: quantumpie</div> <div class="ml-3">Reddit: u/QuantumPie_</div></div> <span class="h4">How to use:</span> <div class="flex flex-col gap-y-2 mb-4"><span class="ml-4">1. Select which pieces you want to be included in the solved pattern (for example, if CRIT &
			ATK are selected, the solutions must include at least one of those pieces)</span> <span class="ml-4">2. Check the boxes to match the pattern for your soul weapon. The current example is for a
			4x4 weapon (note: it doesn't matter where the 4x4 region is centered)</span> <span class="ml-4">3. Click the "Start" button to find all possible solutions with the given constraints</span> <span>Note: There are <span> </span> </span></div> <div></div> <div class="mt-8 flex flex-col justify-center w-min"><div class="space-y-2 mb-4"></div> <button type="button" class="btn preset-filled-primary-500">Start</button></div> <div class="w-screen"><!></div></div>`);function Ue(M,_){Se(_,!0);const y=1e7,T=90;let k=G(0),w=G(ne([[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!1,!0,!1,!1,!1],[!0,!0,!0,!0,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1]]));Te(()=>{e(w),e(N),O(R,oe(!0).length,!0)});let C=G(null),R=G(0);const de=(s,l)=>{e(w)[s][l]=!e(w)[s][l],O(w,[...e(w)],!0)},pe=s=>{const l=Array.from({length:7},()=>Array(7).fill(null));for(const{piece:o,rotation:n,position:r}of s){const t=j[o][n],[i,c]=r;for(let p=0;p<t.length;p++)for(let a=0;a<t[p].length;a++)t[p][a]===1&&(l[i+p][c+a]=o)}return l},se={I:"#FF0000",O:"#00FF00",T:"#0000FF",L:"#FF00FF",J:"#00FFFF",S:"#FFFF00",Z:"#FFFFFF"},ae={I:"Gold",O:"Crit DMG",T:"HP Recovery",L:"ATK",J:"HP",S:"Accuracy",Z:"Dodge"},j={I:[[[1,1,1,1]],[[1],[1],[1],[1]]],O:[[[1,1],[1,1]]],T:[[[0,1,0],[1,1,1]],[[1,0],[1,1],[1,0]],[[1,1,1],[0,1,0]],[[0,1],[1,1],[0,1]]],L:[[[1,0],[1,0],[1,1]],[[1,1,1],[1,0,0]],[[1,1],[0,1],[0,1]],[[0,0,1],[1,1,1]]],J:[[[0,1],[0,1],[1,1]],[[1,0,0],[1,1,1]],[[1,1],[1,0],[1,0]],[[1,1,1],[0,0,1]]],S:[[[0,1,1],[1,1,0]],[[1,0],[1,1],[0,1]]],Z:[[[1,1,0],[0,1,1]],[[0,1],[1,1],[1,0]]]};let N=G(ne({I:!0,O:!0,T:!0,L:!0,J:!0,S:!0,Z:!0}));const ue=(s,l)=>{const o=[];for(let n=0;n<l.length;n++){const r=l[n];for(let t=0;t<=s.length-r.length;t++)for(let i=0;i<=s[0].length-r[0].length;i++)me(s,r,t,i)&&o.push({rotation:n,position:[t,i]})}return o},me=(s,l,o,n)=>{for(let r=0;r<l.length;r++)for(let t=0;t<l[r].length;t++)if(l[r][t]===1){const i=o+r,c=n+t;if(i>=s.length||c>=s[0].length||!s[i][c])return!1}return!0},he=(s,l)=>{const o=s.map(n=>n.map(()=>!1));for(const{rotation:n,position:r,piece:t}of l){const i=j[t][n],[c,p]=r;for(let a=0;a<i.length;a++)for(let f=0;f<i[a].length;f++)if(i[a][f]===1){if(o[c+a][p+f]||!s[c+a][p+f])return!1;o[c+a][p+f]=!0}}return s.every((n,r)=>n.every((t,i)=>!t||o[r][i]))},oe=(s=!1)=>{const l=[];for(const[o,n]of Object.entries(j)){const r=ue(e(w),n).map(t=>({piece:o,...t}));l.push(...r)}return s?l.filter(({piece:o})=>e(N)[o]):l},_e=(s,l)=>{const o=oe(!1);console.log("Number of placements: ",o.length);const n=new Set,r=[],t=(c,p,a=!1)=>{if(he(s,c)){const g=c.map(({piece:S})=>S).sort().join(",");n.has(g)||(n.add(g),r.push([...c]));return}const f=a?o:o.filter(({piece:g})=>e(N)[g]);for(const g of f){if(e(k)>y){console.log("Iteration limit reached");return}const{piece:S,rotation:D,position:Y}=g,F=l[S][D],[$,P]=Y;let q=!0;for(let v=0;v<F.length;v++){for(let b=0;b<F[v].length;b++){if(F[v][b]===1){const H=$+v,U=P+b;if(p[H][U]){q=!1;break}}O(k,e(k)+1)}if(!q)break}if(!q)continue;const z=p.map(v=>[...v]);for(let v=0;v<F.length;v++)for(let b=0;b<F[v].length;b++)F[v][b]===1&&(z[$+v][P+b]=!0);c.push(g),t(c,z,!0),c.pop()}},i=s.map(c=>c.map(()=>!1));return t([],i),r};var K=Be(),Q=u(m(K),6),re=u(m(Q),6),Z=u(m(re)),ge=m(Z,!0);d(Z);var be=u(Z);d(re),d(Q);var V=u(Q,2);L(V,21,()=>Object.entries(j),A,(s,l)=>{var o=Pe(()=>Ie(e(l),2));let n=()=>e(o)[0];var r=Ne(),t=m(r),i=m(t);ce(i),i.__change=[je,N,n],d(t);var c=u(t,2),p=u(c,2),a=m(p,!0);d(p),d(r),I(f=>{fe(i,f),ve(c,`background-color: ${se[n()]??""}`),J(a,ae[n()])},[()=>B(e(N))[n()]]),h(s,r)}),d(V);var E=u(V,2),W=m(E);L(W,20,()=>[0,1,2,3,4,5,6],A,(s,l)=>{var o=ze();L(o,20,()=>[0,1,2,3,4,5,6],A,(n,r)=>{var t=qe(),i=m(t);ce(i),i.__change=[$e,de,l,r],d(t),I(c=>fe(i,c),[()=>B(e(w))[l][r]]),h(n,t)}),d(o),h(s,o)}),d(W);var xe=u(W,2);xe.__click=[Re,k,w,C,_e,j],d(E);var le=u(E,2),ye=m(le);{var we=s=>{var l=Xe(),o=ie(l),n=m(o);{var r=a=>{var f=Ge();h(a,f)},t=a=>{var f=Je(),g=m(f);d(f),I(S=>J(g,`Checked ${S??""} possible combinations.`),[()=>e(k).toLocaleString()]),h(a,f)};te(n,a=>{e(k)>=y-1?a(r):a(t,!1)})}d(o);var i=u(o,2);{var c=a=>{var f=De(),g=u(m(f),2);L(g,17,()=>e(C),A,(S,D,Y)=>{var F=Ze(),$=m(F);$.textContent=`Solution ${Y+1}:`;var P=u($,2),q=u(m(P));d(P);var z=u(P,2);L(z,21,()=>pe(e(D)),A,(v,b)=>{var H=ke(),U=ie(H);L(U,17,()=>e(b),A,(Fe,X)=>{var ee=Me();I(()=>{ve(ee,`background-color: ${(e(X)?se[e(X)]:"transparent")??""}`),Oe(ee,"title",e(X)?`Piece: ${e(X)}`:"")}),h(Fe,ee)}),h(v,H)}),d(z),d(F),I(v=>J(q,`: ${v??""}`),[()=>e(D).map(({piece:v})=>ae[v]).join(", ")]),h(S,F)}),d(f),h(a,f)},p=a=>{var f=He();h(a,f)};te(i,a=>{e(C).length>0?a(c):a(p,!1)})}h(s,l)};te(ye,s=>{e(C)&&s(we)})}d(le),d(K),I(s=>{Ae(Z,1,`${e(R)>=T?"text-red-500":"text-green-500"}`,"svelte-1k48ly"),J(ge,e(R)),J(be,` initial solutions to check. If this number is over 90, there will likely be to many
			solutions to check and it will stop after checking ${s??""} scenarios`)},[()=>y.toLocaleString()]),h(M,K),Ce()}Le(["change","click"]);export{Ue as component};
