import{f as b,a as h,c as Se}from"../chunks/DBPJ-AVf.js";import{O as Te,P as $,Q as oe,A as Ce,K as e,R as T,S as u,T as C,V as Ie,W as m,X as d,Y as Pe,Z as re,_ as Ae}from"../chunks/OQWIG1sH.js";import{d as Le,s as z}from"../chunks/IfoMecIw.js";import{e as I,s as D,i as P}from"../chunks/BkQsKajP.js";import{i as W}from"../chunks/Bid8q2DA.js";import{s as Oe,r as le,a as ne,b as ie,c as Re}from"../chunks/DLflnOHp.js";var je=b('<div class="flex items-center space-x-2"><label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label> <div class="w-8 h-8 border border-gray-300"></div> <span> </span></div>'),$e=b('<label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label>'),ze=b('<div class="flex items-center space-x-2"></div>'),Ne=b(`<p class="text-red-500">Iteration limit reached. Please try to reduce the number of pieces or the size of the
						board.</p>`),Ze=b('<p class="text-green-500"> </p>'),qe=b('<div class="w-8 h-8 border border-gray-300"></div>'),Je=b('<div class="mb-8 w-screen"><h3 class="text-xl font-semibold mb-4"></h3> <div class="mb-2"><strong>Stats</strong> </div> <div class="grid grid-cols-7 gap-1 w-fit svelte-15sb5z1"></div></div>'),De=b('<div class="m-8 flex flex-col justify-center w-min"><h2 class="text-2xl font-bold mb-4">Solutions</h2> <!></div>'),Ge=b("<p>No solutions found.</p>"),He=b('<div class="mx-8 mt-4"><!></div> <!>',1),Ke=b(`<div class="p-8"><div>Soul weapon engravement optimimzer for <a class="text-blue-500" href="https://www.reddit.com/r/SlayerLegend/">Slayer Legends</a></div> <div class="my-4"><div>If you have any comments/requests you can reach out to me via:</div> <div class="ml-3">Discord: quantumpie</div> <div class="ml-3">Reddit: u/QuantumPie_</div></div> <span class="h4">How to use:</span> <div class="flex flex-col gap-y-2 mb-4"><span class="ml-4">1. Select which pieces you want to be included in the solved pattern (for example, if CRIT &
			ATK are selected, the solutions must include at least one of those pieces)</span> <span class="ml-4">2. Check the boxes to match the pattern for your soul weapon. The current example is for a
			4x4 weapon (note: it doesn't matter where the 4x4 region is centered)</span> <span class="ml-4">3. Click the "Start" button to find all possible solutions with the given constraints</span> <span>Note: There are <span> </span> </span></div> <div></div> <div class="mt-8 flex flex-col justify-center w-min"><div class="space-y-2 mb-4"></div> <button type="button" class="btn preset-filled-primary-500">Start</button></div> <div class="w-screen"><!></div></div>`);function Ee(ce,fe){Te(fe,!0);const G=1e7,ve=90;let F=$(0),y=$(oe([[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!1,!0,!1,!1,!1],[!0,!0,!0,!0,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1]]));Ce(()=>{e(y),e(w),T(H,te(!0).length,!0)});let A=$(null),H=$(0);const de=(t,a)=>{e(y)[t][a]=!e(y)[t][a],T(y,[...e(y)],!0)},pe=t=>{const a=Array.from({length:7},()=>Array(7).fill(null));for(const{piece:r,rotation:l,position:n}of t){const s=L[r][l],[i,c]=n;for(let p=0;p<s.length;p++)for(let o=0;o<s[p].length;o++)s[p][o]===1&&(a[i+p][c+o]=r)}return a},Y={I:"#FF0000",O:"#00FF00",T:"#0000FF",L:"#FF00FF",J:"#00FFFF",S:"#FFFF00",Z:"#FFFFFF"},ee={I:"Gold",O:"Crit DMG",T:"HP Recovery",L:"ATK",J:"HP",S:"Accuracy",Z:"Dodge"},L={I:[[[1,1,1,1]],[[1],[1],[1],[1]]],O:[[[1,1],[1,1]]],T:[[[0,1,0],[1,1,1]],[[1,0],[1,1],[1,0]],[[1,1,1],[0,1,0]],[[0,1],[1,1],[0,1]]],L:[[[1,0],[1,0],[1,1]],[[1,1,1],[1,0,0]],[[1,1],[0,1],[0,1]],[[0,0,1],[1,1,1]]],J:[[[0,1],[0,1],[1,1]],[[1,0,0],[1,1,1]],[[1,1],[1,0],[1,0]],[[1,1,1],[0,0,1]]],S:[[[0,1,1],[1,1,0]],[[1,0],[1,1],[0,1]]],Z:[[[1,1,0],[0,1,1]],[[0,1],[1,1],[1,0]]]};let w=$(oe({I:!0,O:!0,T:!0,L:!0,J:!0,S:!0,Z:!0}));const ue=(t,a)=>{const r=[];for(let l=0;l<a.length;l++){const n=a[l];for(let s=0;s<=t.length-n.length;s++)for(let i=0;i<=t[0].length-n[0].length;i++)me(t,n,s,i)&&r.push({rotation:l,position:[s,i]})}return r},me=(t,a,r,l)=>{for(let n=0;n<a.length;n++)for(let s=0;s<a[n].length;s++)if(a[n][s]===1){const i=r+n,c=l+s;if(i>=t.length||c>=t[0].length||!t[i][c])return!1}return!0},he=(t,a)=>{const r=t.map(l=>l.map(()=>!1));for(const{rotation:l,position:n,piece:s}of a){const i=L[s][l],[c,p]=n;for(let o=0;o<i.length;o++)for(let f=0;f<i[o].length;f++)if(i[o][f]===1){if(r[c+o][p+f]||!t[c+o][p+f])return!1;r[c+o][p+f]=!0}}return t.every((l,n)=>l.every((s,i)=>!s||r[n][i]))},te=(t=!1)=>{const a=[];for(const[r,l]of Object.entries(L)){const n=ue(e(y),l).map(s=>({piece:r,...s}));a.push(...n)}return t?a.filter(({piece:r})=>e(w)[r]):a},_e=(t,a)=>{const r=te(!1);console.log("Number of placements: ",r.length);const l=new Set,n=[],s=(c,p,o=!1)=>{if(he(t,c)){const _=c.map(({piece:k})=>k).sort().join(",");l.has(_)||(l.add(_),n.push([...c]));return}const f=o?r:r.filter(({piece:_})=>e(w)[_]);for(const _ of f){if(e(F)>G){console.log("Iteration limit reached");return}const{piece:k,rotation:Z,position:U}=_,x=a[k][Z],[O,S]=U;let R=!0;for(let v=0;v<x.length;v++){for(let g=0;g<x[v].length;g++){if(x[v][g]===1){const q=O+v,V=S+g;if(p[q][V]){R=!1;break}}T(F,e(F)+1)}if(!R)break}if(!R)continue;const j=p.map(v=>[...v]);for(let v=0;v<x.length;v++)for(let g=0;g<x[v].length;g++)x[v][g]===1&&(j[O+v][S+g]=!0);c.push(_),s(c,j,!0),c.pop()}},i=t.map(c=>c.map(()=>!1));return s([],i),n},ge=()=>{T(F,0);const t=D(e(y)).map(a=>[...a]);T(A,_e(t,L),!0),console.log("Unique Solutions:",D(e(A))),console.log("Iterations:",e(F))};var K=Ke(),M=u(m(K),6),se=u(m(M),6),N=u(m(se)),be=m(N,!0);d(N);var xe=u(N);d(se),d(M);var X=u(M,2);I(X,21,()=>Object.entries(L),P,(t,a)=>{var r=Pe(()=>Ae(e(a),2));let l=()=>e(r)[0];var n=je(),s=m(n),i=m(s);le(i),i.__change=()=>{e(w)[l()]=!e(w)[l()],T(w,{...e(w)},!0)},d(s);var c=u(s,2),p=u(c,2),o=m(p,!0);d(p),d(n),C(f=>{ne(i,f),ie(c,`background-color: ${Y[l()]??""}`),z(o,ee[l()])},[()=>D(e(w))[l()]]),h(t,n)}),d(X);var B=u(X,2),Q=m(B);I(Q,20,()=>[0,1,2,3,4,5,6],P,(t,a)=>{var r=ze();I(r,20,()=>[0,1,2,3,4,5,6],P,(l,n)=>{var s=$e(),i=m(s);le(i),i.__change=()=>de(a,n),d(s),C(c=>ne(i,c),[()=>D(e(y))[a][n]]),h(l,s)}),d(r),h(t,r)}),d(Q);var ye=u(Q,2);ye.__click=ge,d(B);var ae=u(B,2),we=m(ae);{var Fe=t=>{var a=He(),r=re(a),l=m(r);{var n=o=>{var f=Ne();h(o,f)},s=o=>{var f=Ze(),_=m(f);d(f),C(k=>z(_,`Checked ${k??""} possible combinations.`),[()=>e(F).toLocaleString()]),h(o,f)};W(l,o=>{e(F)>=G-1?o(n):o(s,!1)})}d(r);var i=u(r,2);{var c=o=>{var f=De(),_=u(m(f),2);I(_,17,()=>e(A),P,(k,Z,U)=>{var x=Je(),O=m(x);O.textContent=`Solution ${U+1}:`;var S=u(O,2),R=u(m(S));d(S);var j=u(S,2);I(j,21,()=>pe(e(Z)),P,(v,g)=>{var q=Se(),V=re(q);I(V,17,()=>e(g),P,(ke,J)=>{var E=qe();C(()=>{ie(E,`background-color: ${(e(J)?Y[e(J)]:"transparent")??""}`),Re(E,"title",e(J)?`Piece: ${e(J)}`:"")}),h(ke,E)}),h(v,q)}),d(j),d(x),C(v=>z(R,`: ${v??""}`),[()=>e(Z).map(({piece:v})=>ee[v]).join(", ")]),h(k,x)}),d(f),h(o,f)},p=o=>{var f=Ge();h(o,f)};W(i,o=>{e(A).length>0?o(c):o(p,!1)})}h(t,a)};W(we,t=>{e(A)&&t(Fe)})}d(ae),d(K),C(t=>{Oe(N,1,`${e(H)>=ve?"text-red-500":"text-green-500"}`,"svelte-15sb5z1"),z(be,e(H)),z(xe,` initial solutions to check. If this number is over 90, there will likely be to many
			solutions to check and it will stop after checking ${t??""} scenarios`)},[()=>G.toLocaleString()]),h(ce,K),Ie()}Le(["change","click"]);export{Ee as component};
