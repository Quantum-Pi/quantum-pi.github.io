import{t as C,a as y,c as Se}from"../chunks/BuFVoJZd.js";import{A as Ce,ak as Te,al as Pe,ad as Ae,am as Z,a5 as fe,T as je,aj as _,af as I,ag as Ie,ah as g,j as t,a6 as N,ai as u,ae as de}from"../chunks/DDeyVzY9.js";import{d as Oe,s as $}from"../chunks/DeAuubrp.js";import{i as oe}from"../chunks/Qm9zaiAs.js";import{e as O,i as L}from"../chunks/1igRtjTw.js";import{s as Le,r as pe,a as ve,b as ue,c as Ne}from"../chunks/BiJUfRC0.js";const Je=[];function X(e,d=!1){return K(e,new Map,"",Je)}function K(e,d,b,T,x=null){if(typeof e=="object"&&e!==null){var w=d.get(e);if(w!==void 0)return w;if(e instanceof Map)return new Map(e);if(e instanceof Set)return new Set(e);if(Ce(e)){var m=Array(e.length);d.set(e,m),x!==null&&d.set(x,m);for(var F=0;F<e.length;F+=1){var Q=e[F];F in e&&(m[F]=K(Q,d,b,T))}return m}if(Te(e)===Pe){m={},d.set(e,m),x!==null&&d.set(x,m);for(var z in e)m[z]=K(e[z],d,b,T);return m}if(e instanceof Date)return structuredClone(e);if(typeof e.toJSON=="function")return K(e.toJSON(),d,b,T,e)}if(e instanceof EventTarget)return e;try{return structuredClone(e)}catch{return e}}const Me=(e,d,b,T,x,w)=>{N(d,0);const m=X(t(b)).map(F=>[...F]);N(T,x(m,w),!0),console.log("Unique Solutions:",X(t(T))),console.log("Iterations:",t(d))};var Re=(e,d,b)=>{t(d)[b()]=!t(d)[b()],N(d,{...t(d)},!0)},qe=C('<div class="flex items-center space-x-2"><label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"></label> <div class="w-8 h-8 border border-gray-300"></div> <span> </span></div>'),De=(e,d,b,T)=>d(b,T),Ze=C('<label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"></label>'),$e=C('<div class="flex items-center space-x-2"></div>'),ze=C(`<p class="text-red-500">Iteration limit reached. Please try to reduce the number of pieces or the size of the
						board.</p>`),Ge=C('<p class="text-green-500"> </p>'),He=C('<div class="w-8 h-8 border border-gray-300"></div>'),Be=C('<div class="mb-8 w-screen"><h3 class="text-xl font-semibold mb-4"></h3> <div class="mb-2"><strong>Stats</strong> </div> <div class="grid grid-cols-7 gap-1 w-fit svelte-1k48ly"></div></div>'),Ee=C('<div class="m-8 flex flex-col justify-center w-min"><h2 class="text-2xl font-bold mb-4">Solutions</h2> <!></div>'),Ke=C("<p>No solutions found.</p>"),Xe=C('<div class="mx-8 mt-4"><!></div> <!>',1),Qe=C(`<div class="p-8"><div>Soul weapon engravement optimimzer for <a class="text-blue-500" href="https://www.reddit.com/r/SlayerLegend/">Slayer Legends</a></div> <div class="my-4"><div>If you have any comments/requests you can reach out to me via:</div> <div class="ml-3">Discord: quantumpie</div> <div class="ml-3">Reddit: u/QuantumPie_</div></div> <span class="h4">How to use:</span> <div class="flex flex-col gap-y-2 mb-4"><span class="ml-4">1. Select which pieces you want to be included in the solved pattern (for example, if CRIT &
			ATK are selected, the solutions must include at least one of those pieces)</span> <span class="ml-4">2. Check the boxes to match the pattern for your soul weapon. The current example is for a
			4x4 weapon (note: it doesn't matter where the 4x4 region is centered)</span> <span class="ml-4">3. Click the "Start" button to find all possible solutions with the given constraints</span> <span>Note: There are <span> </span> </span></div> <div></div> <div class="mt-8 flex flex-col justify-center w-min"><div class="space-y-2 mb-4"></div> <button type="button" class="btn preset-filled-primary-500">Start</button></div> <div class="w-screen"><!></div></div>`);function st(e,d){Ae(d,!0);const b=1e7,T=90;let x=Z(0),w=Z(fe([[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!1,!0,!1,!1,!1],[!0,!0,!0,!0,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1]]));je(()=>{t(w),t(M),N(F,le(!0).length,!0)});let m=Z(null),F=Z(0);const Q=(r,l)=>{t(w)[r][l]=!t(w)[r][l],N(w,[...t(w)],!0)},z=r=>{const l=Array.from({length:7},()=>Array(7).fill(null));for(const{piece:s,rotation:i,position:n}of r){const a=J[s][i],[c,f]=n;for(let h=0;h<a.length;h++)for(let o=0;o<a[h].length;o++)a[h][o]===1&&(l[c+h][f+o]=s)}return l},V={I:"#FF0000",O:"#00FF00",T:"#0000FF",L:"#FF00FF",J:"#00FFFF",S:"#FFFF00",Z:"#FFFFFF"},ne={I:"Gold",O:"Crit DMG",T:"HP Recovery",L:"ATK",J:"HP",S:"Accuracy",Z:"Dodge"},J={I:[[[1,1,1,1]],[[1],[1],[1],[1]]],O:[[[1,1],[1,1]]],T:[[[0,1,0],[1,1,1]],[[1,0],[1,1],[1,0]],[[1,1,1],[0,1,0]],[[0,1],[1,1],[0,1]]],L:[[[1,0],[1,0],[1,1]],[[1,1,1],[1,0,0]],[[1,1],[0,1],[0,1]],[[0,0,1],[1,1,1]]],J:[[[0,1],[0,1],[1,1]],[[1,0,0],[1,1,1]],[[1,1],[1,0],[1,0]],[[1,1,1],[0,0,1]]],S:[[[0,1,1],[1,1,0]],[[1,0],[1,1],[0,1]]],Z:[[[1,1,0],[0,1,1]],[[0,1],[1,1],[1,0]]]};let M=Z(fe({I:!0,O:!0,T:!0,L:!0,J:!0,S:!0,Z:!0}));const me=(r,l)=>{const s=[];for(let i=0;i<l.length;i++){const n=l[i];for(let a=0;a<=r.length-n.length;a++)for(let c=0;c<=r[0].length-n[0].length;c++)he(r,n,a,c)&&s.push({rotation:i,position:[a,c]})}return s},he=(r,l,s,i)=>{for(let n=0;n<l.length;n++)for(let a=0;a<l[n].length;a++)if(l[n][a]===1){const c=s+n,f=i+a;if(c>=r.length||f>=r[0].length||!r[c][f])return!1}return!0},_e=(r,l)=>{const s=r.map(i=>i.map(()=>!1));for(const{rotation:i,position:n,piece:a}of l){const c=J[a][i],[f,h]=n;for(let o=0;o<c.length;o++)for(let p=0;p<c[o].length;p++)if(c[o][p]===1){if(s[f+o][h+p]||!r[f+o][h+p])return!1;s[f+o][h+p]=!0}}return r.every((i,n)=>i.every((a,c)=>!a||s[n][c]))},le=(r=!1)=>{const l=[];for(const[s,i]of Object.entries(J)){const n=me(t(w),i).map(a=>({piece:s,...a}));l.push(...n)}return r?l.filter(({piece:s})=>t(M)[s]):l},ge=(r,l)=>{const s=le(!1);console.log("Number of placements: ",s.length);const i=new Set,n=[],a=(f,h,o=!1)=>{if(_e(r,f)){const k=f.map(({piece:A})=>A).sort().join(",");i.has(k)||(i.add(k),n.push([...f]));return}const p=o?s:s.filter(({piece:k})=>t(M)[k]);for(const k of p){if(t(x)>b){console.log("Iteration limit reached");return}const{piece:A,rotation:H,position:se}=k,P=l[A][H],[R,j]=se;let q=!0;for(let v=0;v<P.length;v++){for(let S=0;S<P[v].length;S++){if(P[v][S]===1){const B=R+v,ae=j+S;if(h[B][ae]){q=!1;break}}N(x,t(x)+1)}if(!q)break}if(!q)continue;const D=h.map(v=>[...v]);for(let v=0;v<P.length;v++)for(let S=0;S<P[v].length;S++)P[v][S]===1&&(D[R+v][j+S]=!0);f.push(k),a(f,D,!0),f.pop()}},c=r.map(f=>f.map(()=>!1));return a([],c),n};var W=Qe(),Y=_(g(W),6),ie=_(g(Y),6),G=_(g(ie)),be=g(G,!0);u(G);var xe=_(G);u(ie),u(Y);var U=_(Y,2);O(U,21,()=>Object.entries(J),L,(r,l)=>{let s=()=>t(l)[0];var i=qe(),n=g(i),a=g(n);pe(a),a.__change=[Re,M,s],u(n);var c=_(n,2),f=_(c,2),h=g(f,!0);u(f),u(i),I(o=>{ve(a,o),ue(c,`background-color: ${V[s()]??""}`),$(h,ne[s()])},[()=>X(t(M))[s()]]),y(r,i)}),u(U);var ee=_(U,2),te=g(ee);O(te,20,()=>[0,1,2,3,4,5,6],L,(r,l)=>{var s=$e();O(s,20,()=>[0,1,2,3,4,5,6],L,(i,n)=>{var a=Ze(),c=g(a);pe(c),c.__change=[De,Q,l,n],u(a),I(f=>ve(c,f),[()=>X(t(w))[l][n]]),y(i,a)}),u(s),y(r,s)}),u(te);var we=_(te,2);we.__click=[Me,x,w,m,ge,J],u(ee);var ce=_(ee,2),ye=g(ce);{var Fe=r=>{var l=Xe(),s=de(l),i=g(s);{var n=o=>{var p=ze();y(o,p)},a=o=>{var p=Ge(),k=g(p);u(p),I(A=>$(k,`Checked ${A??""} possible combinations.`),[()=>t(x).toLocaleString()]),y(o,p)};oe(i,o=>{t(x)>=b-1?o(n):o(a,!1)})}u(s);var c=_(s,2);{var f=o=>{var p=Ee(),k=_(g(p),2);O(k,17,()=>t(m),L,(A,H,se)=>{var P=Be(),R=g(P);R.textContent=`Solution ${se+1}:`;var j=_(R,2),q=_(g(j));u(j);var D=_(j,2);O(D,21,()=>z(t(H)),L,(v,S)=>{var B=Se(),ae=de(B);O(ae,17,()=>t(S),L,(ke,E)=>{var re=He();I(()=>{ue(re,`background-color: ${(t(E)?V[t(E)]:"transparent")??""}`),Ne(re,"title",t(E)?`Piece: ${t(E)}`:"")}),y(ke,re)}),y(v,B)}),u(D),u(P),I(v=>$(q,`: ${v??""}`),[()=>t(H).map(({piece:v})=>ne[v]).join(", ")]),y(A,P)}),u(p),y(o,p)},h=o=>{var p=Ke();y(o,p)};oe(c,o=>{t(m).length>0?o(f):o(h,!1)})}y(r,l)};oe(ye,r=>{t(m)&&r(Fe)})}u(ce),u(W),I(r=>{Le(G,1,`${t(F)>=T?"text-red-500":"text-green-500"}`,"svelte-1k48ly"),$(be,t(F)),$(xe,` initial solutions to check. If this number is over 90, there will likely be to many
			solutions to check and it will stop after checking ${r??""} scenarios`)},[()=>b.toLocaleString()]),y(e,W),Ie()}Oe(["change","click"]);export{st as component};
