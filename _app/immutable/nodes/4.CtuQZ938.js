import"../chunks/CWj6FrbW.js";import{_ as ke,$ as Z,a0 as ne,u as Se,a1 as x,a2 as u,a3 as I,a4 as h,a5 as Ce,a6 as m,W as e,a7 as O,a8 as d,a9 as Te,aa as ie,ab as Pe,ac as Ie}from"../chunks/BdVaGBCy.js";import{d as Ae,s as z}from"../chunks/BRkVvsie.js";import{e as A,s as K,i as L}from"../chunks/R_IxMPYZ.js";import{i as te}from"../chunks/6xeYaWgO.js";import{s as Le,r as ce,a as fe,b as ve,c as Oe}from"../chunks/B5anKBXl.js";const $e=(D,_,y,C,k,w)=>{O(_,0);const T=K(e(y)).map($=>[...$]);O(C,k(T,w),!0),console.log("Unique Solutions:",K(e(C))),console.log("Iterations:",e(_))};var je=(D,_,y)=>{e(_)[y()]=!e(_)[y()],O(_,{...e(_)},!0)},Re=x('<div class="flex items-center space-x-2"><label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label> <div class="w-8 h-8 border border-gray-300"></div> <span> </span></div>'),Ne=(D,_,y,C)=>_(y,C),qe=x('<label class="flex items-center space-x-2"><input class="checkbox" type="checkbox"/></label>'),Je=x('<div class="flex items-center space-x-2"></div>'),Ze=x(`<p class="text-red-500">Iteration limit reached. Please try to reduce the number of pieces or the size of the
						board.</p>`),ze=x('<p class="text-green-500"> </p>'),De=x('<div class="w-8 h-8 border border-gray-300"></div>'),Ge=x('<div class="mb-8 w-screen"><h3 class="text-xl font-semibold mb-4"></h3> <div class="mb-2"><strong>Stats</strong> </div> <div class="grid grid-cols-7 gap-1 w-fit svelte-1k48ly"></div></div>'),He=x('<div class="m-8 flex flex-col justify-center w-min"><h2 class="text-2xl font-bold mb-4">Solutions</h2> <!></div>'),Me=x("<p>No solutions found.</p>"),Be=x('<div class="mx-8 mt-4"><!></div> <!>',1),Ke=x(`<div class="p-8"><div>Soul weapon engravement optimimzer for <a class="text-blue-500" href="https://www.reddit.com/r/SlayerLegend/">Slayer Legends</a></div> <div class="my-4"><div>If you have any comments/requests you can reach out to me via:</div> <div class="ml-3">Discord: quantumpie</div> <div class="ml-3">Reddit: u/QuantumPie_</div></div> <span class="h4">How to use:</span> <div class="flex flex-col gap-y-2 mb-4"><span class="ml-4">1. Select which pieces you want to be included in the solved pattern (for example, if CRIT &
			ATK are selected, the solutions must include at least one of those pieces)</span> <span class="ml-4">2. Check the boxes to match the pattern for your soul weapon. The current example is for a
			4x4 weapon (note: it doesn't matter where the 4x4 region is centered)</span> <span class="ml-4">3. Click the "Start" button to find all possible solutions with the given constraints</span> <span>Note: There are <span> </span> </span></div> <div></div> <div class="mt-8 flex flex-col justify-center w-min"><div class="space-y-2 mb-4"></div> <button type="button" class="btn preset-filled-primary-500">Start</button></div> <div class="w-screen"><!></div></div>`);function Ue(D,_){ke(_,!0);const y=1e7,C=90;let k=Z(0),w=Z(ne([[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!0,!0,!1,!1,!1],[!1,!0,!1,!0,!1,!1,!1],[!0,!0,!0,!0,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1],[!1,!1,!1,!1,!1,!1,!1]]));Se(()=>{e(w),e(R),O($,oe(!0).length,!0)});let T=Z(null),$=Z(0);const de=(a,l)=>{e(w)[a][l]=!e(w)[a][l],O(w,[...e(w)],!0)},pe=a=>{const l=Array.from({length:7},()=>Array(7).fill(null));for(const{piece:o,rotation:n,position:r}of a){const t=j[o][n],[i,c]=r;for(let p=0;p<t.length;p++)for(let s=0;s<t[p].length;s++)t[p][s]===1&&(l[i+p][c+s]=o)}return l},ae={I:"#FF0000",O:"#00FF00",T:"#0000FF",L:"#FF00FF",J:"#00FFFF",S:"#FFFF00",Z:"#FFFFFF"},se={I:"Gold",O:"Crit DMG",T:"HP Recovery",L:"ATK",J:"HP",S:"Accuracy",Z:"Dodge"},j={I:[[[1,1,1,1]],[[1],[1],[1],[1]]],O:[[[1,1],[1,1]]],T:[[[0,1,0],[1,1,1]],[[1,0],[1,1],[1,0]],[[1,1,1],[0,1,0]],[[0,1],[1,1],[0,1]]],L:[[[1,0],[1,0],[1,1]],[[1,1,1],[1,0,0]],[[1,1],[0,1],[0,1]],[[0,0,1],[1,1,1]]],J:[[[0,1],[0,1],[1,1]],[[1,0,0],[1,1,1]],[[1,1],[1,0],[1,0]],[[1,1,1],[0,0,1]]],S:[[[0,1,1],[1,1,0]],[[1,0],[1,1],[0,1]]],Z:[[[1,1,0],[0,1,1]],[[0,1],[1,1],[1,0]]]};let R=Z(ne({I:!0,O:!0,T:!0,L:!0,J:!0,S:!0,Z:!0}));const ue=(a,l)=>{const o=[];for(let n=0;n<l.length;n++){const r=l[n];for(let t=0;t<=a.length-r.length;t++)for(let i=0;i<=a[0].length-r[0].length;i++)me(a,r,t,i)&&o.push({rotation:n,position:[t,i]})}return o},me=(a,l,o,n)=>{for(let r=0;r<l.length;r++)for(let t=0;t<l[r].length;t++)if(l[r][t]===1){const i=o+r,c=n+t;if(i>=a.length||c>=a[0].length||!a[i][c])return!1}return!0},he=(a,l)=>{const o=a.map(n=>n.map(()=>!1));for(const{rotation:n,position:r,piece:t}of l){const i=j[t][n],[c,p]=r;for(let s=0;s<i.length;s++)for(let f=0;f<i[s].length;f++)if(i[s][f]===1){if(o[c+s][p+f]||!a[c+s][p+f])return!1;o[c+s][p+f]=!0}}return a.every((n,r)=>n.every((t,i)=>!t||o[r][i]))},oe=(a=!1)=>{const l=[];for(const[o,n]of Object.entries(j)){const r=ue(e(w),n).map(t=>({piece:o,...t}));l.push(...r)}return a?l.filter(({piece:o})=>e(R)[o]):l},_e=(a,l)=>{const o=oe(!1);console.log("Number of placements: ",o.length);const n=new Set,r=[],t=(c,p,s=!1)=>{if(he(a,c)){const g=c.map(({piece:S})=>S).sort().join(",");n.has(g)||(n.add(g),r.push([...c]));return}const f=s?o:o.filter(({piece:g})=>e(R)[g]);for(const g of f){if(e(k)>y){console.log("Iteration limit reached");return}const{piece:S,rotation:H,position:Y}=g,F=l[S][H],[N,P]=Y;let q=!0;for(let v=0;v<F.length;v++){for(let b=0;b<F[v].length;b++){if(F[v][b]===1){const M=N+v,U=P+b;if(p[M][U]){q=!1;break}}O(k,e(k)+1)}if(!q)break}if(!q)continue;const J=p.map(v=>[...v]);for(let v=0;v<F.length;v++)for(let b=0;b<F[v].length;b++)F[v][b]===1&&(J[N+v][P+b]=!0);c.push(g),t(c,J,!0),c.pop()}},i=a.map(c=>c.map(()=>!1));return t([],i),r};var X=Ke(),E=u(m(X),6),re=u(m(E),6),G=u(m(re)),ge=m(G,!0);d(G);var be=u(G);d(re),d(E);var Q=u(E,2);A(Q,21,()=>Object.entries(j),L,(a,l)=>{var o=Te(()=>Pe(e(l),2));let n=()=>e(o)[0];var r=Re(),t=m(r),i=m(t);ce(i),i.__change=[je,R,n],d(t);var c=u(t,2),p=u(c,2),s=m(p,!0);d(p),d(r),I(f=>{fe(i,f),ve(c,`background-color: ${ae[n()]??""}`),z(s,se[n()])},[()=>K(e(R))[n()]]),h(a,r)}),d(Q);var V=u(Q,2),W=m(V);A(W,20,()=>[0,1,2,3,4,5,6],L,(a,l)=>{var o=Je();A(o,20,()=>[0,1,2,3,4,5,6],L,(n,r)=>{var t=qe(),i=m(t);ce(i),i.__change=[Ne,de,l,r],d(t),I(c=>fe(i,c),[()=>K(e(w))[l][r]]),h(n,t)}),d(o),h(a,o)}),d(W);var xe=u(W,2);xe.__click=[$e,k,w,T,_e,j],d(V);var le=u(V,2),ye=m(le);{var we=a=>{var l=Be(),o=ie(l),n=m(o);{var r=s=>{var f=Ze();h(s,f)},t=s=>{var f=ze(),g=m(f);d(f),I(S=>z(g,`Checked ${S??""} possible combinations.`),[()=>e(k).toLocaleString()]),h(s,f)};te(n,s=>{e(k)>=y-1?s(r):s(t,!1)})}d(o);var i=u(o,2);{var c=s=>{var f=He(),g=u(m(f),2);A(g,17,()=>e(T),L,(S,H,Y)=>{var F=Ge(),N=m(F);N.textContent=`Solution ${Y+1}:`;var P=u(N,2),q=u(m(P));d(P);var J=u(P,2);A(J,21,()=>pe(e(H)),L,(v,b)=>{var M=Ie(),U=ie(M);A(U,17,()=>e(b),L,(Fe,B)=>{var ee=De();I(()=>{ve(ee,`background-color: ${(e(B)?ae[e(B)]:"transparent")??""}`),Oe(ee,"title",e(B)?`Piece: ${e(B)}`:"")}),h(Fe,ee)}),h(v,M)}),d(J),d(F),I(v=>z(q,`: ${v??""}`),[()=>e(H).map(({piece:v})=>se[v]).join(", ")]),h(S,F)}),d(f),h(s,f)},p=s=>{var f=Me();h(s,f)};te(i,s=>{e(T).length>0?s(c):s(p,!1)})}h(a,l)};te(ye,a=>{e(T)&&a(we)})}d(le),d(X),I(a=>{Le(G,1,`${e($)>=C?"text-red-500":"text-green-500"}`,"svelte-1k48ly"),z(ge,e($)),z(be,` initial solutions to check. If this number is over 90, there will likely be to many
			solutions to check and it will stop after checking ${a??""} scenarios`)},[()=>y.toLocaleString()]),h(D,X),Ce()}Ae(["change","click"]);export{Ue as component};
